@typeparam TField

<span>@Label</span>
@if (string.IsNullOrEmpty(UrlTemplate))
{
    <button class="btn btn-link" @onclick="ToggleSort">
        @if (IsSorted)
        {
            @if (IsAsc)
            {
                <i class="bi bi-caret-down-fill"></i>
            }
            else
            {
                <i class="bi bi-caret-up-fill"></i>
            }
        }
        else
        {
            <i class="bi bi-caret-down"></i>
        }
    </button>
}
else
{
    <a class="btn btn-link" href="@SortLink">
        @if (IsSorted)
        {
            @if (IsAsc)
            {
                <i class="bi bi-caret-down-fill"></i>
            }
            else
            {
                <i class="bi bi-caret-up-fill"></i>
            }
        }
        else
        {
            <i class="bi bi-caret-down"></i>
        }
    </a>
}
@code {
    [Parameter]
    public string Label { get; set; } = string.Empty;

    [Parameter]
    public TField SortField { get; set; }

    [Parameter]
    public bool IsSorted { get; set; } = false;

    [Parameter]
    public bool IsAsc { get; set; } = true;

    [Parameter]
    public EventCallback OnSort { get; set; }

    [Parameter]
    public string UrlTemplate { get; set; }

    private void ToggleSort()
    {
        OnSort.InvokeAsync();
    }

    private string SortLink => string.Format(UrlTemplate, SortField, !IsAsc);
}